When would you want to use a remote repository rather than keeping all your work local?

In any case where I'd be working with a group that may all want to keep an eye on the most current version of a project, or in the case where I would like to have an online backup of work instead of trusting all the work to one local machine.  In the event of a disaster, it would be good to have the online version that could be restored to any machine.


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Pulling manually makes sense because you may not necessarily want any surprises in your local code.  If there are multiple people working on the remote, you may have unexpected changes pulled down.  


Describe the differences between forks, clones, and branches. When would you use one instead of another?

A fork is only used on GitHub to easily clone an existing repo to one you control.  A clone can be done locally or between local and GitHub.  A branch exists inside a repo.


What is the benefit of having a copy of the last known state of the remote stored locally?

Having a copy of the last known state allows one to work offline if you may need to make any merges.



How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Depending on the format, a similar system like Google Docs allows for a collaborative space without having to trade versions of files, but makes history difficult and merging impractical.  Passing raw files back in forth in email has potential to be a nightmare but allows for individual offline editing and a very rough version of history by looking back at older files.


When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

When suggesting a change that you don't want to immediately affect the master, it would make mor sense to branch off and initiate a pull request once it's all ready.  
